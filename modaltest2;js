// Fonction pour récupérer les projets à partir de l'API (remplacez le lien par votre API)
async function fetchProjects() {
    try {
        const response = await fetch('http://localhost:5678/api/works');
        const data = await response.json();
        return data;
    } catch (error) {
        console.error('Erreur lors de la récupération des projets:', error);
        return [];
    }
}

// Fonction pour créer une modal de projet
function createProjectModal(project) {
    const modalContent = document.createElement('div');
    modalContent.classList.add('modal-content', 'projet-modal-content');

    const projectName = document.createElement('h3');
    projectName.textContent = project.name;

    const closeBtn = document.createElement('span');
    closeBtn.classList.add('close');
    closeBtn.textContent = '×';
    closeBtn.onclick = closeProjectModal;

    const deleteBtn = document.createElement('button');
    deleteBtn.textContent = 'Supprimer';
    deleteBtn.onclick = () => deleteProject(project.id); // Appeler la fonction de suppression avec l'ID du projet

    const projectImage = document.createElement('img');
    projectImage.src = project.imageUrl;
    projectImage.alt = project.name;

    const projectDetailsContainer = document.createElement('div');

    // Ajoutez d'autres informations du projet ici
    const projectId = document.createElement('p');
    projectId.textContent = `ID: ${project.id}`;
    projectDetailsContainer.appendChild(projectId);

    modalContent.appendChild(projectName);
    modalContent.appendChild(closeBtn);
    modalContent.appendChild(deleteBtn);
    modalContent.appendChild(projectImage);
    modalContent.appendChild(projectDetailsContainer);

    return modalContent;
}


// Fonction pour ouvrir la modal du projet
function openProjectModal(project) {
    const projectModal = document.getElementById('myModal');
    const modalContent = createProjectModal(project);

    // Effacez le contenu précédent de la modal
    projectModal.innerHTML = '';
    projectModal.appendChild(modalContent);

    // Affichez la modal
    projectModal.style.display = 'block';
}

// Fonction pour fermer la modal du projet
function closeProjectModal() {
    const projectModal = document.getElementById('myModal');
    projectModal.style.display = 'none';
}

// Fonction pour initialiser la page
async function init() {
    try {
        // Récupérez les projets à partir de l'API
        const projects = await fetchProjects();

        // Sélectionnez la galerie où vous souhaitez afficher les projets
        const gallery = document.querySelector('.gallery');

        // Ajoutez chaque projet à la galerie
        projects.forEach((project) => {
            const projectCard = document.createElement('div');
            projectCard.classList.add('project-card');
            projectCard.innerHTML = `<img src="${project.imageUrl}" alt="${project.name}"><p>${project.name}</p>`;
            projectCard.onclick = () => openProjectModal(project);
            gallery.appendChild(projectCard);
        });

        // Sélectionnez l'élément "modifier"
        const modifierElement = document.querySelector('.modifier');

        // Ajoutez un écouteur d'événements pour ouvrir la modal lors du clic sur "modifier"
        modifierElement.addEventListener('click', () => openProjectModal(projects[0])); // Remplacez projects[0] par le projet que vous souhaitez afficher
    } catch (error) {
        console.error('Erreur lors de l\'initialisation de la page:', error);
    }
}
// Fonction pour supprimer un projet (à personnaliser en fonction de votre logique d'API)
function deleteProject(projectId) {
    // Appeler votre API pour supprimer le projet avec l'ID projectId
    // Assurez-vous de gérer les erreurs et les réponses de l'API en conséquence
    console.log('Supprimer le projet avec l\'ID:', projectId);
    // Ajoutez ici la logique d'appel à votre API pour supprimer le projet
}

// Appelez la fonction d'initialisation lorsque la page est chargée
document.addEventListener('DOMContentLoaded', init);
